import { test, expect } from "@playwright/test";

//👩‍💻 📟🔐Authenticate via API  using the storage state generated by the fixture
//When to use:
//Your web application supports authenticating via API that is easier/faster 
// than interacting with the app UI.

/**
 * ┌────────────────────────────────────────────────────────────┐
 * │         Test Block: Uses storageState from saved file       │
 * └────────────────────────────────────────────────────────────┘
 *                   │
 *                   ▼
 *    Playwright auto-loads `apilogin.json` into browser context
 *                   │
 *                   ▼
 *    No need to perform UI login again — already authenticated
 *                   │
 *                   ▼
 *   Test navigates directly to `/myorders` and validates content
 *
 *  Fast, clean, and ideal for stable backend-auth flows!
 */



test.use({ storageState: "playwright/.auth/apilogin.json" });
test("Admin sees orders page", async ({ page }) => {
  await page.goto("https://bookcart.azurewebsites.net/myorders");
  await expect(page).toHaveURL(/myorders$/);
  await expect(page.getByRole("columnheader", { name: "Order ID" })).toBeVisible();

});
 