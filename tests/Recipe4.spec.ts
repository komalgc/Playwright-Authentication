// tests/setup.spec.ts
import { expect } from '@playwright/test';
import { test } from '../playwright/adminPage.fixture';

//👩‍💻 📟🔐Authenticate via API  using the storage state generated by the fixture 
// and its dependent fixture
//When to use:
//Custom fixture gets lengthy and complicated 

/**

 * ┌────────────────────────────────────────────────────────────┐
 * │   Test File: Uses `getPageWithAuth('admin' | 'user')`      │
 * └────────────────────────────────────────────────────────────┘
 *                   │
 *                   ▼
 *   Injects pre-authenticated page into test
 *   ✅ Skips login → Directly tests application features
 *                   │
 *                   ▼
 *   Enables clean test isolation & supports multi-user testing
 */


test('Generate admin storage', async ({ adminPage }) => {

  // All the work happens in the fixture chain
    console.log('Test ran with stored admin state.');
     await adminPage.goto("https://bookcart.azurewebsites.net/myorders");
      await expect(adminPage).toHaveURL(/myorders$/);
      await expect(adminPage.getByRole("columnheader", { name: "Order ID" })).toBeVisible();

  
});
